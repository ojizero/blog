<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nixology on ojizero/blog</title><link>https://blog.ojizero.tech/tags/nixology/</link><description>Recent content in nixology on ojizero/blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 11 Jun 2020 01:31:00 +0300</lastBuildDate><atom:link href="https://blog.ojizero.tech/tags/nixology/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started with Nix</title><link>https://blog.ojizero.tech/posts/getting-started-with-nix/</link><pubDate>Thu, 11 Jun 2020 01:31:00 +0300</pubDate><guid>https://blog.ojizero.tech/posts/getting-started-with-nix/</guid><description>Nix, the purely functional package manager.
The Nix package manager has been, on and off, on my radar for a couple of years now, the premise of it, using &amp;ldquo;functional programing&amp;rdquo;-esque behaviours in order to create a reproducible package management, seemed very intriguing! I mean you know, it has to be cool because it has purely functional in its tagline! This post is a beginning of a group of posts as I experiment and play around with Nix, partially inspired (and tagged under the same name) by this ongoing playlist from Shopify&amp;rsquo;s Burke Libbey, who&amp;rsquo;s videos reignited my interest in Nix, enough to starts attempting to move to solely using it!</description></item></channel></rss>